name: zzz-name

on:
  pull_request:
    branches:
      - main
      - staging
      - master
    types: [opened, edited, synchronize, reopened]
  pull_request_target:
    branches:
      - main
      - staging
      - master
    types: [opened, edited, synchronize, reopened]

jobs:
  ccc-zzz:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout PR code
        uses: actions/checkout@v4

      - name: Fetch base branch
        run: git fetch origin ${{ github.event.pull_request.base.ref }} --depth=1

      - name: Check for SQL files
        id: check_sql
        run: |
          CHANGED_FILES=$(git diff --name-only origin/${{ github.event.pull_request.base.ref }} HEAD)
          echo "CHANGED_FILES=$CHANGED_FILES"
          SQL_FILES=$(echo "$CHANGED_FILES" | grep '\.sql$' || true)
          echo "SQL_FILES=$SQL_FILES"

          if [[ -n "$SQL_FILES" ]]; then
            echo "found_sql=true" >> $GITHUB_ENV
          else
            echo "found_sql=false" >> $GITHUB_ENV
          fi

      - name: Prepare PR Body
        run: |
          PR_NUMBER="${{ github.event.pull_request.number }}"
          echo "PR_NUMBER=$PR_NUMBER" >> $GITHUB_ENV
          BODY=$(gh pr view "$PR_NUMBER" --json body -q .body)          

          if [[ "$found_sql" == "true" && "$BODY" != *"# Checklist"* ]]; then
            CUSTOM_BODY=$(cat <<EOF
          $BODY

          --------------
          ### Checklist            
          - [ ] DB migrations were applied.
          EOF
          )

            gh pr edit "$PR_NUMBER" --body "$CUSTOM_BODY"
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Check PR description for approval task
        id: check_pr_description
        run: |
          echo "allow_sql=true" >> $GITHUB_ENV
          PR_BODY=$(gh pr view "$PR_NUMBER" --json body -q .body)
          echo "PR_BODY=$PR_BODY"

          if [[ "$PR_BODY" == *"- [ ] DB migrations"* ]]; then
            echo "allow_sql=false" >> $GITHUB_ENV
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Block merge if SQL files are found and task not approved
        run: |
          echo "found_sql=$found_sql"
          echo "allow_sql=$allow_sql"
          
          if [[ "$found_sql" == "true" && "$allow_sql" == "false" ]]; then
            echo "'Applied DB migrations' task is not checked in the PR."
            exit 1
          fi
